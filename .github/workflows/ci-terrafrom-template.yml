name: terraform-pipeline-template

on:
  workflow_call:
    inputs:
      terraform_directory:
        description: "Path to Terraform code"
        required: true
        type: string
      environment:
        description: "Deployment environment"
        required: true
        type: string
      auto_apply:
        description: "Whether to auto-apply Terraform plan"
        required: false
        default: false
        type: boolean
    secrets:
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      ARM_SUBSCRIPTION_ID:
        required: true
      ARM_TENANT_ID:
        required: true

jobs:
  terraform:
    name: Terraform Deploy (${{ inputs.environment }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Initialize Terraform
        run: terraform init
        working-directory: ${{ inputs.terraform_directory }}

      - name: Validate Terraform
        run: terraform validate
        working-directory: ${{ inputs.terraform_directory }}

      - name: Plan Terraform
        run: terraform plan -out=tfplan
        working-directory: ${{ inputs.terraform_directory }}

      - name: Apply Terraform
        if: ${{ inputs.auto_apply == true }}
        run: terraform apply -auto-approve tfplan
        working-directory: ${{ inputs.terraform_directory }}
